---
- name: Check if {{ image_path }} is directory
  stat:
    path: "{{ image_path }}"
  register: image_path_st

- name: Download the qcow image
  get_url:
    url: "{{ qcow_url }}"
    dest: "{{ image_path_st.stat.isdir is defined and image_path_st.stat.isdir | ternary(image_path~'/'~qcow_url.rpartition('/')[-1], image_path) | regex_replace('//', '/') }}"
    force: "{{ not image_cache_download }}"
    checksum: "{{ image_checksum | default(omit) }}"
    timeout: "{{ image_download_timeout }}"
    client_cert: "{{ qcow_url_client_cert | default(omit) }}"
    client_key: "{{ qcow_curl_client_key | default(omit) }}"
  register: downloaded_file
  tags:
    - ovirt-template-image

- name: Check file type
  command: "/usr/bin/file {{ downloaded_file.dest | quote }}"
  changed_when: false
  register: filetype
  tags:
    - ovirt-template-image

- name: Fail if image is not qcow
  fail:
    msg: "The downloaded file is not valid QCOW file."
  when: '"QCOW" not in filetype.stdout'
  tags:
    - ovirt-template-image

- name: Calculate image size in GiB
  set_fact:
    qcow2_size: "{{ (filetype.stdout_lines[0].split()[5] | int / 2**30) | round(0, 'ceil') | int }}GiB"

- name: Create template from VM
  include_tasks: "create_vm_template_image.yml"
  when: kvm_import is defined or xen_import is defined or vmware_import is defined
